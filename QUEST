local function identifyexecutor()
       return"CODE QUEST?"
end
getgenv().identifyexecutor = function()
    return "CODE QUEST?"
end

getgenv().getexecutorname = function()
    return "CODE QUEST?"
end

	local headers = game:GetService("HttpService"):JSONDecode(request({Url = "https://httpbin.org/get"}).Body).headers
	local Fingerprint = ""
	local UserIdentifier = ""
	local UserAgent = "CODE QUEST?"
	local oldr;oldr = hookfunction(request, function(options)
		local h = options.Headers or {}
		h['Syn-Fingerprint'] = KRNLHWID or Fingerprint
		h['Syn-User-Identifier'] = KRNLUID or UserIdentifier
		h['User-Agent'] = UserAgent
		return oldr({
			Url = options.Url,
			Method = options.Method or "GET",
			Headers = h,
			Cookies = options.Cookies or {},
			Body = options.Body or ""
		})
	end)
	hookfunction(http_request, request)

local blockedFunctions = {
  "ReturnToJavaScript",
  "EmitHybridEvent",
  "PromptBundlePurchase",
  "PromptGamePassPurchase",
  "PromptProductPurchase",
  "PromptRobloxPurchase",
  "PromptThirdPartyPurchase",
"PromptPurchase",
  "Call",
  "GetProtocolMethodRequestMessageId",
  "GetProtocolMethodResponseMessageId",
  "PublishProtocolMethodRequest",
  "PublishProtocolMethodResponse",
  "Subscribe",
  "SubscribeToProtocolMethodRequest",
  "SubscribeToProtocolMethodResponse"
}
local gameMetatable = getrawmetatable(game)
local originalNamecall = gameMetatable.__namecall
setreadonly(gameMetatable, false)

gameMetatable.__namecall = newcclosure(function(self, ...)
    local args = {...}
    local method = getnamecallmethod()

    if table.find(blockedFunctions, method) then
        return nil
    end

    return originalNamecall(self, ...)
end)

setreadonly(gameMetatable, true)
repeat task.wait() until game:IsLoaded()
print("CODE QUEST???")
loadstring(game:HttpGet("https://pastefy.app/A1uo2OxC/raw"))()
